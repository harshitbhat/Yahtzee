{"version":3,"sources":["logo.svg","Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","ModalRules.js","reportWebVitals.js","index.js"],"names":["Die","props","handleClick","bind","this","idx","numberWords","val","locked","disabled","rolling","classes","className","onClick","Component","defaultProps","Dice","dice","map","d","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","key","cellSpacing","evt","getTotalScore","Game","state","fill","rollsLeft","toggleLocked","animateRoll","roll","rulename","ruleFn","setState","st","setTimeout","console","log","i","Math","ceil","random","slice","every","x","displayRollInfo","App","show","showModal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5c8df18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport './Die.css';\n\nclass Die extends Component {\n  static defaultProps = {\n    numberWords: ['one', 'two', 'three', 'four', 'five', 'six'],\n    val: 6,\n    locked: false,\n    disabled: false,\n    rolling: false,\n  };\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.props.handleClick(this.props.idx);\n  }\n  render() {\n    const { numberWords, val, locked, disabled, rolling } = this.props;\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-3x `;\n    if (locked) classes += ' Die-locked';\n    if (rolling) classes += ' Die-rolling';\n    return (\n      <i className={classes} disabled={disabled} onClick={this.handleClick} />\n    );\n  }\n}\n\nexport default Die;\n","import React, { Component } from 'react';\nimport './Dice.css';\nimport Die from './Die';\n\nclass Dice extends Component {\n  static defaultProps = {\n    dice: [1, 2, 3, 4, 5],\n    locked: [true, false, true, false, true],\n    disabled: false,\n    rolling: false,\n  };\n  render() {\n    return (\n      <div className=\"Dice\">\n        {this.props.dice.map((d, idx) => (\n          <Die\n            val={d}\n            locked={this.props.locked[idx]}\n            idx={idx}\n            key={idx}\n            disabled={this.props.disabled}\n            rolling={this.props.rolling && !this.props.locked[idx]}\n            handleClick={this.props.handleClick}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Dice;\n","import React, { Component } from 'react';\nimport './RuleRow.css';\n\nclass RuleRow extends Component {\n  render() {\n    const { score, name, doScore, description } = this.props;\n    const disabled = score !== undefined;\n    return (\n      <tr\n        className={`RuleRow RuleRow-${disabled ? 'disabled' : 'active'}`}\n        onClick={disabled ? null : doScore}\n      >\n        <td className=\"RuleRow-name\">{name}</td>\n        <td className=\"RuleRow-score\">{disabled ? score : description}</td>\n      </tr>\n    );\n  }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter((d) => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = (dice) => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = (dice) => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some((c) => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n// [1,2,2,2,1]\nclass FullHouse extends Rule {\n  evalRoll = (dice) => {\n    const freqs = this.freq(dice);\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n  };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n  evalRoll = (dice) => {\n    const d = new Set(dice);\n    // straight can be 234 + either 1 or 5\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5)))\n      return this.score;\n\n    // or 345 + either 2 or 6\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6)))\n      return this.score;\n\n    return 0;\n  };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = (dice) => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = (dice) => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: '1 point per 1' });\nconst twos = new TotalOneNumber({ val: 2, description: '2 points per 2' });\nconst threes = new TotalOneNumber({ val: 3, description: '3 points per 3' });\nconst fours = new TotalOneNumber({ val: 4, description: '4 points per 4' });\nconst fives = new TotalOneNumber({ val: 5, description: '5 points per 5' });\nconst sixes = new TotalOneNumber({ val: 6, description: '6 points per 6' });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n  count: 3,\n  description: 'Sum all dice if 3 are the same',\n});\nconst fourOfKind = new SumDistro({\n  count: 4,\n  description: 'Sum all dice if 4 are the same',\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n  score: 25,\n  description: '25 points for a full house',\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n  score: 30,\n  description: '30 points for a small straight',\n});\nconst largeStraight = new LargeStraight({\n  score: 40,\n  description: '40 points for a large straight',\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n  score: 50,\n  description: '50 points for yahtzee',\n});\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: 'Sum of all dice' });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance,\n};\n","import React, { Component } from 'react';\nimport RuleRow from './RuleRow';\nimport './ScoreTable.css';\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance,\n} from './Rules';\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const { scores } = this.props;\n    let totalScore = 0;\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n    return totalScore;\n  }\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Ones\"\n                score={scores.ones}\n                description={ones.description}\n                doScore={(evt) => doScore('ones', ones.evalRoll)}\n              />\n              <RuleRow\n                name=\"Twos\"\n                score={scores.twos}\n                description={twos.description}\n                doScore={(evt) => doScore('twos', twos.evalRoll)}\n              />\n              <RuleRow\n                name=\"Threes\"\n                score={scores.threes}\n                description={threes.description}\n                doScore={(evt) => doScore('threes', threes.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fours\"\n                score={scores.fours}\n                description={fours.description}\n                doScore={(evt) => doScore('fours', fours.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fives\"\n                score={scores.fives}\n                description={fives.description}\n                doScore={(evt) => doScore('fives', fives.evalRoll)}\n              />\n              <RuleRow\n                name=\"Sixes\"\n                score={scores.sixes}\n                description={sixes.description}\n                doScore={(evt) => doScore('sixes', sixes.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Three of Kind\"\n                score={scores.threeOfKind}\n                description={threeOfKind.description}\n                doScore={(evt) => doScore('threeOfKind', threeOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Four of Kind\"\n                score={scores.fourOfKind}\n                description={fourOfKind.description}\n                doScore={(evt) => doScore('fourOfKind', fourOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Full House\"\n                score={scores.fullHouse}\n                description={fullHouse.description}\n                doScore={(evt) => doScore('fullHouse', fullHouse.evalRoll)}\n              />\n              <RuleRow\n                name=\"Small Straight\"\n                score={scores.smallStraight}\n                description={smallStraight.description}\n                doScore={(evt) =>\n                  doScore('smallStraight', smallStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Large Straight\"\n                score={scores.largeStraight}\n                description={largeStraight.description}\n                doScore={(evt) =>\n                  doScore('largeStraight', largeStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Yahtzee\"\n                score={scores.yahtzee}\n                description={yahtzee.description}\n                doScore={(evt) => doScore('yahtzee', yahtzee.evalRoll)}\n              />\n              <RuleRow\n                name=\"Chance\"\n                score={scores.chance}\n                description={chance.description}\n                doScore={(evt) => doScore('chance', chance.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default ScoreTable;\n","import React, { Component } from 'react';\nimport Dice from './Dice';\nimport './Game.css';\nimport ScoreTable from './ScoreTable';\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  /* -------------------------------------------------------------------------- */\n  /*                                 Constructor                                */\n  /* -------------------------------------------------------------------------- */\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined,\n      },\n    };\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n  componentDidMount() {\n    this.animateRoll();\n  }\n  /* -------------------------------------------------------------------------- */\n  /*                                    Score                                   */\n  /* -------------------------------------------------------------------------- */\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState((st) => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false),\n    }));\n    this.animateRoll();\n  }\n  /* -------------------------------------------------------------------------- */\n  /*                           On Button Click - Roll                           */\n  /* -------------------------------------------------------------------------- */\n  animateRoll() {\n    this.setState({ rolling: true }, () => {\n      setTimeout(this.roll, 1000);\n    });\n  }\n  roll(evt) {\n    console.log(this.state.dice);\n    console.log(this.state.locked);\n    // Roll dices whose indices are in reroll\n    this.setState((st) => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] === true ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false,\n    }));\n    console.log(this.state.dice);\n    console.log(this.state.locked);\n  }\n  /* -------------------------------------------------------------------------- */\n  /*                             Toggle Lock - Dices                            */\n  /* -------------------------------------------------------------------------- */\n  toggleLocked(idx) {\n    // Toggle whetheridx is in locked or not\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\n      this.setState((st) => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1),\n        ],\n      }));\n    }\n  }\n  /* -------------------------------------------------------------------------- */\n  /*                               Button Content                              */\n  /* -------------------------------------------------------------------------- */\n  displayRollInfo() {\n    const messages = [\n      '0 Rolls Left',\n      '1 Roll Left',\n      '2 Rolls Left',\n      'Starting Round',\n    ];\n    return messages[this.state.rollsLeft];\n  }\n  render() {\n    const { dice, locked, rollsLeft, rolling, scores } = this.state;\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee </h1>\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={dice}\n              locked={locked}\n              rolling={rolling}\n              disabled={rollsLeft === 0}\n              handleClick={this.toggleLocked}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                disabled={locked.every((x) => x) || rollsLeft === 0 || rolling}\n                onClick={this.animateRoll}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Die from './Die';\nimport Dice from './Dice';\nimport Game from './Game';\nimport ModalRules from './ModalRules';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n    this.showModal = this.showModal.bind(this);\n  }\n  showModal() {\n    this.setState({ show: !this.state.show });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n\nModal Window to be added later:\n<button onClick={this.showModal}>Show Modal</button>\n        <ModalRules show={this.state.show} />\n\n*/\n","import React, { Component } from 'react';\n\nclass ModalRules extends Component {\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <h1>Rules of Yahtzee</h1>\n        <p>\n          The game consists of a number of rounds. In each round, a player gets\n          three rolls of the dice, although they can choose to end their turn\n          after one or two rolls. After the first roll the player can save any\n          dice they want and re-roll the other dice. This procedure is repeated\n          after the second roll. The player has complete choice as to which dice\n          to roll. It is possible to re-roll both dice that were or were not\n          rolled before.\n        </p>\n        <p>\n          The Yahtzee scorecard contains 13 different category boxes and in each\n          round, after the third roll, the player must choose one of these\n          categories. The score entered in the box depends on how well the five\n          dice match the scoring rule for the category. Details of the scoring\n          rules for each category are given below.The game is completed after 13\n          rounds by each player, with each of the 13 boxes filled. The total\n          score is calculated by summing all thirteen boxes, together with any\n          bonuses\n        </p>\n        <p>\n          The Yahtzee scorecard contains 13 scoring boxes divided into upper and\n          lower sections.\n        </p>\n        <h3>Upper Section</h3>\n        <table>\n          <tbody>\n            <tr>\n              <th>Categories</th>\n              <th>Descriptions</th>\n              <th>Scores</th>\n            </tr>\n            <tr>\n              <th>Aces</th>\n              <td>Any combination</td>\n              <td>The sum of dice with the number 1</td>\n            </tr>\n            <tr>\n              <th>Twos</th>\n              <td>Any combination</td>\n              <td>The sum of dice with the number 2</td>\n            </tr>\n            <tr>\n              <th>Threes</th>\n              <td>Any combination</td>\n              <td>The sum of dice with the number 3</td>\n            </tr>\n            <tr>\n              <th>Fours</th>\n              <td>Any combination</td>\n              <td>The sum of dice with the number 4</td>\n            </tr>\n            <tr>\n              <th>Fives</th>\n              <td>Any combination</td>\n              <td>The sum of dice with the number 5</td>\n            </tr>\n            <tr>\n              <th>Sixes</th>\n              <td>Any combination</td>\n              <td>The sum of dice with the number 6</td>\n            </tr>\n          </tbody>\n        </table>\n        <h3>Lower section</h3>\n        <table>\n          <tr>\n            <th>Categories</th>\n            <th>Descriptions</th>\n            <th>Scores</th>\n          </tr>\n          <tr>\n            <th>Three Of A Kind</th>\n            <td>At least three dice the same </td>\n            <td>Sum of all dice</td>\n          </tr>\n          <tr>\n            <th>Four Of A Kind</th>\n            <td>At least four dice the same</td>\n            <td>Sum of all dice</td>\n          </tr>\n          <tr>\n            <th>Full House</th>\n            <td>Three of one number and two of another</td>\n            <td>25</td>\n          </tr>\n          <tr>\n            <th>Small Straight</th>\n            <td>Four sequential dice (1-2-3-4, 2-3-4-5, or 3-4-5-6)</td>\n            <td>30</td>\n          </tr>\n          <tr>\n            <th>Large Straight</th>\n            <td>Five sequential dice (1-2-3-4-5 or 2-3-4-5-6)</td>\n            <td>40</td>\n          </tr>\n          <tr>\n            <th>Yahtzee</th>\n            <td>All five dice the same</td>\n            <td>50</td>\n          </tr>\n          <tr>\n            <th>Chance</th>\n            <td>Any combination</td>\n            <td>Sum of all dice</td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ModalRules;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}